/*
  The solution is slow but it's work, the function isOk check if one coordinate can see another, I just loop every coordinate between them and calculate the slope
  這解法很慢但有效，isOk 去檢查一個點能不能看見另外一個，檢查方式是去找這中間所有點會不會擋到（根據斜率）
*/

var w = 33
var h = 33
var map = `..#..###....#####....###........#
.##.##...#.#.......#......##....#
#..#..##.#..###...##....#......##
..####...#..##...####.#.......#.#
...#.#.....##...#.####.#.###.#..#
#..#..##.#.#.####.#.###.#.##.....
#.##...##.....##.#......#.....##.
.#..##.##.#..#....#...#...#...##.
.#..#.....###.#..##.###.##.......
.##...#..#####.#.#......####.....
..##.#.#.#.###..#...#.#..##.#....
.....#....#....##.####....#......
.#..##.#.........#..#......###..#
#.##....#.#..#.#....#.###...#....
.##...##..#.#.#...###..#.#.#..###
.#..##..##...##...#.#.#...#..#.#.
.#..#..##.##...###.##.#......#...
...#.....###.....#....#..#....#..
.#...###..#......#.##.#...#.####.
....#.##...##.#...#........#.#...
..#.##....#..#.......##.##.....#.
.#.#....###.#.#.#.#.#............
#....####.##....#..###.##.#.#..#.
......##....#.#.#...#...#..#.....
...#.#..####.##.#.........###..##
.......#....#.##.......#.#.###...
...#..#.#.........#...###......#.
.#.##.#.#.#.#........#.#.##..#...
.......#.##.#...........#..#.#...
.####....##..#..##.#.##.##..##...
.#.#..###.#..#...#....#.###.#..#.
............#...#...#.......#.#..
.........###.#.....#..##..#.##...`.split('\n')

function isOk(x1, y1, x2, y2) {
  let u = Math.abs(x1-x2) / Math.abs(y1-y2)
  let sx = x1
  let ex = x2
  if (x1 > x2) {
    sx = x2
    ex = x1
  }

  let sy = y1
  let ey = y2
  if (y1 > y2) {
    sy = y2
    ey = y1
  } 

  for(let dy=sy; dy<=ey; dy++) {
    for(let dx=sx; dx<=ex; dx++) {
      let u2 = (Math.abs(dx-x1) / Math.abs(dy-y1))
      if (dx === x1 && dy === y1) continue;
      if (dx === x2 && dy === y2) continue;
      if ( u2 === u) {
        if (map[dy][dx] === '#') {
          return false
        }
      }
    }
  }
  return true
}

function check(rx, ry) {
  let count = 0
  for(let y=0; y<h; y++) {
    for(let x=0; x<w; x++) {
      if (rx===x && ry ===y) continue;
      if (map[y][x] !== '#') continue;
      if (isOk(rx, ry, x, y)) {
        count++
      }
    }
  }
  return count
}

var max = 0
var best = {}
for(let y=0; y<h; y++) {
  for(let x=0; x<w; x++) {
    if (map[y][x] !== '#') continue;
    let n = check(x, y)
    if (n>max) {
      best = {x, y}
      max = n
    }
  }
}
console.log(max, best)